@model IEnumerable<Asp.NetProject.Models.Product>

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center">Products List</h1>

@if (ViewBag.SMessage != null)
{
    <div id="successMessage" class="alert alert-success">@ViewBag.SMessage</div>
}
@if (ViewBag.EMessage != null)
{
    <div id="errorMessage" class="alert alert-dabger">@ViewBag.EMessage</div>
}

<div class="row">
    <div class="col-md-3">
        <a asp-action="Create" class="btn btn-outline-info">Create New Product</a>
    </div>
    <div class="col-md-3">
        <a asp-action="ExpiredProduct" asp-route-id="@ViewBag.DepartmentId" class="btn btn-outline-danger ml-1">Expired Products</a>
    </div>
    <div class="col-md-3">
        <a asp-action="ExpiringProduct" asp-route-id="@ViewBag.DepartmentId" class="btn btn-outline-danger ml-1">Expiring Products</a>
    </div>

</div>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MfgDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ExpDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StockQuantity)
            </th>

            <th>
                Product
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PurchasePrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Department)
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MfgDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExpDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StockQuantity)
                </td>

                <td>
                    <img src="/images/@Html.DisplayFor(modelItem => item.ImagePath)" style="width:100px; height:100px" />
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.PurchasePrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Department.DepartmentName)
                </td>


                <td>
                    <a asp-action="Update" asp-route-id="@item.ProductId" class="btn btn-outline-success">Edit</a> |
                    <a asp-action="Detail" asp-route-id="@item.ProductId" class="btn btn-outline-warning">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ProductId" class="btn btn-outline-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<a asp-action="Manage" asp-controller="Store" asp-route-id="@ViewBag.StoreId" class="btn btn-outline-info">Back</a>


@section Scripts {
    <script src="https://cdn.datatables.net/v/dt/dt-2.0.5/datatables.min.js"></script>

    <script>
        // Function to hide success message after 5 seconds
        window.setTimeout(function () {
            $("#successMessage").fadeTo(100, 0).slideUp(100, function () {
                $(this).remove();
            });
        }, 1000);

        // Function to hide error message after 5 seconds
        window.setTimeout(function () {
            $("#errorMessage").fadeTo(100, 0).slideUp(100, function () {
                $(this).remove();
            });
        }, 1000);
    </script>
}